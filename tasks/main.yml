---
- name: k3s | download binary
  get_url:
    url: "{{ k3s_dl_url }}/k3s"
    checksum: sha256:{{ k3s_dl_url }}/sha256sum-amd64.txt
    dest: /usr/local/bin/k3s
    group: adm
    mode: 0750
  notify: restart k3s

- name: k3s | softlink kubectl
  file:
    src: k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: k3s | auxiliary packages
  package:
    name: 
    - apparmor
    - bash-completion

- name: k3s | bash completion
  shell:
    cmd: /usr/local/bin/kubectl completion bash > /etc/bash_completion.d/kubectl
    creates: /etc/bash_completion.d/kubectl

- name: k3s | enable forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'

- name: k3s | dirs
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - /etc/systemd/system/k3s.service.d
  - "{{ k3s_conf_dir }}"

- name: k3s | config
  template:
    src: "{{ item }}.j2"
    dest: "{{ k3s_conf_dir }}/{{ item }}"
    group: adm
    mode: 0640
  loop:
  - config.yaml
  notify:
  - restart k3s

- name: k3s | resolv.conf
  tags:
  - config
  copy:
    content: "{{ k3s_resolv_conf }}"
    dest: "{{ k3s_conf_dir }}/resolv.conf"
  when: k3s_resolv_conf | length > 0

- name: k3s | kubelet.conf
  tags:
  - config
  copy:
    content: "{{ k3s_kubelet_conf }}"
    dest: "{{ k3s_conf_dir }}/kubelet.conf"
  when: k3s_kubelet_conf | length > 0

- name: k3s | systemd service
  template:
    src: "{{ item | basename }}.j2"
    dest: /etc/systemd/system/{{ item }}
  loop:
  - k3s.service
  - k3s.service.d/iptables.conf
  notify:
  - daemon-reload
  - restart k3s

- name: k3s | enable service
  service:
    name: k3s
    state: started
    enabled: yes

- include_tasks: save_token.yml
  when: k3s_token is not defined

